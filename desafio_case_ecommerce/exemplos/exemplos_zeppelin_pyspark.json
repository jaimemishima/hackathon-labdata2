{"paragraphs":[{"title":"Exibir databases","text":"%pyspark\nspark.sql(\"show databases\").show()\n","user":"anonymous","dateUpdated":"2020-03-07T16:48:07+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+\n|      databaseName|\n+------------------+\n|  db_ecommerce_dev|\n|  db_ecommerce_raw|\n|           default|\n|          sampledb|\n|sessions_ecommerce|\n+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1583599679446_-27866787","id":"20181208-134230_1861185261","dateCreated":"2020-03-07T16:47:59+0000","dateStarted":"2020-03-07T16:48:07+0000","dateFinished":"2020-03-07T16:48:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:953"},{"title":"Acessar database e exibir tabelas","text":"%pyspark\nspark.sql(\"use sessions_ecommerce\")\nspark.sql(\"show tables\").show()","user":"anonymous","dateUpdated":"2020-03-07T16:48:10+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+----------+-----------+\n|          database| tableName|isTemporary|\n+------------------+----------+-----------+\n|sessions_ecommerce|aggregated|      false|\n|sessions_ecommerce|   rawdata|      false|\n+------------------+----------+-----------+\n\n"}]},"apps":[],"jobName":"paragraph_1583599679450_530771972","id":"20181208-134259_1561086742","dateCreated":"2020-03-07T16:47:59+0000","dateStarted":"2020-03-07T16:48:11+0000","dateFinished":"2020-03-07T16:48:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:954"},{"title":"selecionar tabela rawdata","text":"%pyspark\ndf = spark.sql(\"select * from sessions_ecommerce.rawdata\")\ndf.show()","user":"anonymous","dateUpdated":"2020-03-07T16:47:59+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583599679450_-1841112548","id":"20181208-134500_546755517","dateCreated":"2020-03-07T16:47:59+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:955"},{"title":"Também é possível acessar diretamente o S3 em vez de ler tabelas","text":"%pyspark\n# substitua o <bucket-name> pelo nome do seu bucket. Coloque ano, mes, dia e hora que exista no seu bucket s3. \n# df = spark.read.json(\"s3://<bucket-name>/rawdata/ano/mes/dia/hora/\")\ndf = spark.read.json(\"s3://samuel-schmidt-demo-ecomm-bucket-stream/rawdata/2018/12/08/05/\")\ndf.show()","user":"anonymous","dateUpdated":"2020-03-07T16:47:59+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583599679451_-1932026722","id":"20181208-134540_1669931981","dateCreated":"2020-03-07T16:47:59+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:956"},{"text":"%pyspark\n# substitua o <bucket-name> pelo nome do seu bucket. Coloque ano, mes, dia e hora que exista no seu bucket s3\n# df = spark.read.csv(\"s3://<bucket-name>/aggregated/ano/mes/dia/hora/\")\ndf2 = spark.read.csv(\"s3://samuel-schmidt-demo-ecomm-bucket-stream/aggregated/2018/12/08/05/\")\ndf2.show()","user":"anonymous","dateUpdated":"2020-03-07T16:47:59+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583599679451_109836175","id":"20181208-140532_192880319","dateCreated":"2020-03-07T16:47:59+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:957"},{"title":"Gravar o dataframe em formato parquet em um bucket de destino","text":"%pyspark\nDESTINO='s3://bucket-novo/destino'\ndf_final.write \\\n    .format(\"parquet\") \\\n    .option(\"compression\", \"snappy\") \\\n    .mode(\"append\") \\\n    .save(path=DESTINO)\n","user":"anonymous","dateUpdated":"2020-03-07T16:59:51+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 2: df_final.write \\\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-8718656277907407398.py\", line 380, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 2, in <module>\nNameError: name 'df_final' is not defined\n"}]},"apps":[],"jobName":"paragraph_1583599679451_-845280042","id":"20190412-232253_1471290996","dateCreated":"2020-03-07T16:47:59+0000","dateStarted":"2020-03-07T16:59:51+0000","dateFinished":"2020-03-07T16:59:51+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:958"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-03-07T16:47:59+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583599679451_771824231","id":"20190412-232348_380602243","dateCreated":"2020-03-07T16:47:59+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:959"}],"name":"exemplos_zeppelin_pyspark","id":"2F2WCKS2Z","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}